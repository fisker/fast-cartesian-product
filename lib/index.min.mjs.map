{"version":3,"file":"index.min.mjs","sources":["../src/index.js"],"sourcesContent":["function lengthAccumulator(accumulator, {length}) {\n  return accumulator * length\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty\n\nfunction isValidSet(iterable) {\n  return getIterableLength(iterable) > 0\n}\n\nfunction hasLength(iterable) {\n  return hasOwn.call(iterable, 'length')\n}\n\nfunction breakableForEach(iterable, iteratee) {\n  if (hasLength(iterable)) {\n    const {length} = iterable\n    for (let i = 0; i < length; i += 1) {\n      const shouldContinue = iteratee(iterable[i], i, iterable)\n\n      if (shouldContinue === false) {\n        break\n      }\n    }\n\n    return\n  }\n\n  const iterator = iterable[Symbol.iterator]()\n\n  let index = 0\n  let {value, done} = iterator.next()\n  while (!done) {\n    const shouldContinue = iteratee(value, index, iterable)\n\n    if (shouldContinue === false) {\n      break\n    }\n\n    ;({value, done} = iterator.next())\n    index += 1\n  }\n}\n\nfunction getIterableElementByIndex(iterable, index) {\n  if (hasLength(iterable)) {\n    return iterable[index]\n  }\n\n  let element\n\n  breakableForEach(iterable, (value, currentIndex) => {\n    if (index === currentIndex) {\n      element = value\n      return false\n    }\n  })\n\n  return element\n}\n\nfunction getIterableLength(iterable) {\n  if (hasLength(iterable)) {\n    return iterable.length\n  }\n\n  // Set#size\n  if ('size' in iterable) {\n    return iterable.size\n  }\n\n  let length = 0\n\n  breakableForEach(iterable, () => (length += 1))\n\n  return length\n}\n\nclass FastCartesianProduct {\n  constructor(sets) {\n    if (!isValidSet(sets)) {\n      throw new Error('sets should not be empty')\n    }\n\n    breakableForEach(sets, subsets => {\n      if (!isValidSet(subsets)) {\n        throw new Error('sets should not have empty element')\n      }\n    })\n\n    this.sets = sets\n  }\n\n  get(index) {\n    const setsLength = getIterableLength(this.sets)\n    const set = new Array(setsLength)\n\n    let indexRemaining = index\n\n    for (let i = 0; i < setsLength; i += 1) {\n      const subSets = getIterableElementByIndex(this.sets, setsLength - i - 1)\n      const length = getIterableLength(subSets)\n      const index = indexRemaining % length\n      indexRemaining -= index\n      indexRemaining /= length\n      set[setsLength - i - 1] = getIterableElementByIndex(subSets, index)\n    }\n\n    return set\n  }\n\n  [Symbol.iterator]() {\n    const instance = this\n    const {size} = instance\n    let index = 0\n\n    return {\n      next() {\n        const done = index >= size\n        const value = instance.get(index)\n\n        index += 1\n\n        return {\n          value,\n          done,\n        }\n      },\n    }\n  }\n\n  get size() {\n    let size = 1\n    const setsLength = getIterableLength(this.sets)\n\n    breakableForEach(this.sets, subSets => {\n      const length = getIterableLength(subSets)\n      size *= length\n      // eslint-disable-next-line no-restricted-globals\n      if (!isFinite(size)) {\n        return false\n      }\n    })\n\n    return size\n  }\n}\n\nexport default FastCartesianProduct\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","isValidSet","iterable","getIterableLength","hasLength","call","breakableForEach","iteratee","length","i","iterator","Symbol","index","next","value","done","getIterableElementByIndex","currentIndex","element","size","FastCartesianProduct","sets","Error","subsets","setsLength","this","set","Array","indexRemaining","subSets","instance","get","isFinite"],"mappings":"sKAIA,IAAMA,EAASC,OAAOC,UAAUC,eAEhC,SAASC,EAAWC,UACXC,EAAkBD,GAAY,EAGvC,SAASE,EAAUF,UACVL,EAAOQ,KAAKH,EAAU,UAG/B,SAASI,EAAiBJ,EAAUK,MAC9BH,EAAUF,WACLM,EAAUN,EAAVM,OACEC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,KAGX,IAFAF,EAASL,EAASO,GAAIA,EAAGP,sBAU9CQ,EAAWR,EAASS,OAAOD,YAE7BE,EAAQ,IACQF,EAASG,OAAxBC,IAAAA,MAAOC,IAAAA,MACJA,GAAM,KAGW,IAFAR,EAASO,EAAOF,EAAOV,eAM5BQ,EAASG,OAAxBC,IAAAA,MAAOC,IAAAA,KACVH,GAAS,GAIb,SAASI,EAA0Bd,EAAUU,UACvCR,EAAUF,GACLA,EAASU,IAKlBN,EAAiBJ,EAAU,SAACY,EAAOG,MAC7BL,IAAUK,SACZC,EAAUJ,GACH,IAIJI,OATHA,EAYN,SAASf,EAAkBD,MACrBE,EAAUF,UACLA,EAASM,UAId,SAAUN,SACLA,EAASiB,SAGdX,EAAS,SAEbF,EAAiBJ,EAAU,kBAAOM,GAAU,IAErCA,MAGHY,wBACQC,4GACLpB,EAAWoB,SACR,IAAIC,MAAM,4BAGlBhB,EAAiBe,EAAM,SAAAE,OAChBtB,EAAWsB,SACR,IAAID,MAAM,6CAIfD,KAAOA,qDAGVT,WACIY,EAAarB,EAAkBsB,KAAKJ,MACpCK,EAAM,IAAIC,MAAMH,GAElBI,EAAiBhB,EAEZH,EAAI,EAAGA,EAAIe,EAAYf,GAAK,EAAG,KAChCoB,EAAUb,EAA0BS,KAAKJ,KAAMG,EAAaf,EAAI,GAChED,EAASL,EAAkB0B,GAC3BjB,EAAQgB,EAAiBpB,EAC/BoB,GAAkBhB,EAClBgB,GAAkBpB,EAClBkB,EAAIF,EAAaf,EAAI,GAAKO,EAA0Ba,EAASjB,UAGxDc,SAGRf,OAAOD,8BACAoB,EAAWL,KACVN,EAAQW,EAARX,KACHP,EAAQ,QAEL,CACLC,oBACQE,EAAOH,GAASO,EAChBL,EAAQgB,EAASC,IAAInB,UAE3BA,GAAS,EAEF,CACLE,MAAAA,EACAC,KAAAA,sCAOFI,EAAO,EACQhB,EAAkBsB,KAAKJ,aAE1Cf,EAAiBmB,KAAKJ,KAAM,SAAAQ,OACpBrB,EAASL,EAAkB0B,MACjCV,GAAQX,GAEHwB,SAASb,UACL,IAIJA"}