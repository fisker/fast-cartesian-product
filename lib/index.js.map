{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["function lengthAccumulator(accumulator, {length}) {\n  return accumulator * length\n}\n\nclass FastCartesianProduct {\n  constructor(sets) {\n    this.sets = sets\n  }\n\n  get(index) {\n    const setsArray = this.sets\n    const {length: setsLength} = setsArray\n    const set = new Array(setsLength)\n\n    let indexRemaining = index\n\n    let j = index\n\n    for (let i = setsLength -1; i >= 0; i-=1) {\n      const subSets = this.sets[i]\n\n      const {length} = subSets\n      const index = indexRemaining % length;\n      indexRemaining -= index\n      indexRemaining /= length\n      set[i] = subSets[index]\n    }\n\n    return set\n  }\n\n  [Symbol.iterator] () {\n    const instance = this\n    const {size} = instance\n    let index = 0\n\n    return {\n      next() {\n        const done = index >= size\n        const value = instance.get(index)\n\n        index += 1\n\n        return {\n          value,\n          done\n        }\n      }\n    }\n  }\n\n  get size() {\n    let size = 1\n    const {length: setsLength} = this.sets\n    for (let i = 0; i < setsLength; i+=1) {\n      const subSets = this.sets[i]\n      const {length} = subSets\n      size = size * length\n      if (!isFinite(size)) {\n        break\n      }\n    }\n\n    return size\n  }\n}\n\nexport default FastCartesianProduct\n"],"names":["FastCartesianProduct","sets","index","setsArray","setsLength","length","set","Array","indexRemaining","i","subSets","Symbol","iterator","instance","size","next","done","value","get","isFinite"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAIMA;;;EACJ,kCAAYC,IAAZ,EAAkB;EAAA;;EAChB,WAAKA,IAAL,GAAYA,IAAZ;EACD;;;;;8BAEGC,OAAO;EACT,cAAMC,SAAS,GAAG,KAAKF,IAAvB;EADS,cAEMG,UAFN,GAEoBD,SAFpB,CAEFE,MAFE;EAGT,cAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAUH,UAAV,CAAZ;EAEA,cAAII,cAAc,GAAGN,KAArB;AAEA;EAEA,eAAK,IAAIO,CAAC,GAAGL,UAAU,GAAE,CAAzB,EAA4BK,CAAC,IAAI,CAAjC,EAAoCA,CAAC,IAAE,CAAvC,EAA0C;EACxC,gBAAMC,OAAO,GAAG,KAAKT,IAAL,CAAUQ,CAAV,CAAhB;EADwC,gBAGjCJ,MAHiC,GAGvBK,OAHuB,CAGjCL,MAHiC;;EAIxC,gBAAMH,MAAK,GAAGM,cAAc,GAAGH,MAA/B;;EACAG,YAAAA,cAAc,IAAIN,MAAlB;EACAM,YAAAA,cAAc,IAAIH,MAAlB;EACAC,YAAAA,GAAG,CAACG,CAAD,CAAH,GAASC,OAAO,CAACR,MAAD,CAAhB;EACD;;EAED,iBAAOI,GAAP;EACD;;;eAEAK,MAAM,CAACC;kCAAa;EACnB,cAAMC,QAAQ,GAAG,IAAjB;EADmB,cAEZC,IAFY,GAEJD,QAFI,CAEZC,IAFY;EAGnB,cAAIZ,KAAK,GAAG,CAAZ;EAEA,iBAAO;EACLa,YAAAA,IADK,kBACE;EACL,kBAAMC,IAAI,GAAGd,KAAK,IAAIY,IAAtB;EACA,kBAAMG,KAAK,GAAGJ,QAAQ,CAACK,GAAT,CAAahB,KAAb,CAAd;EAEAA,cAAAA,KAAK,IAAI,CAAT;EAEA,qBAAO;EACLe,gBAAAA,KAAK,EAALA,KADK;EAELD,gBAAAA,IAAI,EAAJA;EAFK,eAAP;EAID;EAXI,WAAP;EAaD;;;;8BAEU;EACT,cAAIF,IAAI,GAAG,CAAX;EADS,cAEMV,UAFN,GAEoB,KAAKH,IAFzB,CAEFI,MAFE;;EAGT,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAApB,EAAgCK,CAAC,IAAE,CAAnC,EAAsC;EACpC,gBAAMC,OAAO,GAAG,KAAKT,IAAL,CAAUQ,CAAV,CAAhB;EADoC,gBAE7BJ,MAF6B,GAEnBK,OAFmB,CAE7BL,MAF6B;EAGpCS,YAAAA,IAAI,GAAGA,IAAI,GAAGT,MAAd;;EACA,gBAAI,CAACc,QAAQ,CAACL,IAAD,CAAb,EAAqB;EACnB;EACD;EACF;;EAED,iBAAOA,IAAP;EACD;;;;;;;;;"}